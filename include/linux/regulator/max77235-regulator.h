/*
 * max77235-regulator.h - Regulator Driver for the Maxim 77235
 *
 * Copyright (C) 2013 Maxim Integrated
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

#ifndef __LINUX_MAX77235_REGULATOR_H
#define __LINUX_MAX77235_REGULATOR_H

#include <linux/regulator/consumer.h>

/* registers for BUCK setting */
#define MAX77235_DVS_BUCK1	0x01
#define MAX77235_DVS_BUCK2	0x02
#define MAX77235_DVS_BUCK3	0x04
#define MAX77235_DVS_BUCK4	0x08
#define MAX77235_DVS_BUCK6	0x10

/* registers */
#define MAX77235_REG_BOOSTCTRL		0x0E
#define MAX77235_REG_BOOSTOUT		0x0F
#define MAX77235_REG_BUCK1CTRL		0x10
#define MAX77235_REG_BUCK1DVS1		0x11
#define MAX77235_REG_BUCK1DVS2		0x12
#define MAX77235_REG_BUCK1DVS3		0x13
#define MAX77235_REG_BUCK1DVS4		0x14
#define MAX77235_REG_BUCK1DVS5		0x15
#define MAX77235_REG_BUCK1DVS6		0x16
#define MAX77235_REG_BUCK1DVS7		0x17
#define MAX77235_REG_BUCK1DVS8		0x18
#define MAX77235_REG_BUCK234FREQ	0x19
#define MAX77235_REG_BUCK2CTRL1		0x1A
#define MAX77235_REG_BUCK2CTRL2		0x1B
#define MAX77235_REG_BUCK2PHTRAN	0x1C
#define MAX77235_REG_BUCK2DVS1		0x1D
#define MAX77235_REG_BUCK2DVS2		0x1E
#define MAX77235_REG_BUCK2DVS3		0x1F
#define MAX77235_REG_BUCK2DVS4		0x20
#define MAX77235_REG_BUCK2DVS5		0x21
#define MAX77235_REG_BUCK2DVS6		0x22
#define MAX77235_REG_BUCK2DVS7		0x23
#define MAX77235_REG_BUCK2DVS8		0x24
#define MAX77235_REG_BUCK3CTRL1		0x27
#define MAX77235_REG_BUCK3DVS1		0x28
#define MAX77235_REG_BUCK3DVS2		0x29
#define MAX77235_REG_BUCK3DVS3		0x2A
#define MAX77235_REG_BUCK3DVS4		0x2B
#define MAX77235_REG_BUCK3DVS5		0x2C
#define MAX77235_REG_BUCK3DVS6		0x2D
#define MAX77235_REG_BUCK3DVS7		0x2E
#define MAX77235_REG_BUCK3DVS8		0x2F
#define MAX77235_REG_BUCK4CTRL1		0x37
#define MAX77235_REG_BUCK4DVS1		0x38
#define MAX77235_REG_BUCK4DVS2		0x39
#define MAX77235_REG_BUCK4DVS3		0x3A
#define MAX77235_REG_BUCK4DVS4		0x3B
#define MAX77235_REG_BUCK4DVS5		0x3C
#define MAX77235_REG_BUCK4DVS6		0x3D
#define MAX77235_REG_BUCK4DVS7		0x3E
#define MAX77235_REG_BUCK4DVS8		0x3F
#define MAX77235_REG_BUCK5CTRL		0x41
#define MAX77235_REG_BUCK5OUT		0x42
#define MAX77235_REG_BUCK6CTRL		0x44
#define MAX77235_REG_BUCK6DVS1		0x45
#define MAX77235_REG_BUCK6DVS2		0x46
#define MAX77235_REG_BUCK6DVS3		0x47
#define MAX77235_REG_BUCK6DVS4		0x48
#define MAX77235_REG_BUCK6DVS5		0x49
#define MAX77235_REG_BUCK6DVS6		0x4A
#define MAX77235_REG_BUCK6DVS7		0x4B
#define MAX77235_REG_BUCK6DVS8		0x4C
#define MAX77235_REG_BUCK7CTRL		0x4E
#define MAX77235_REG_BUCK7OUT		0x4F
#define MAX77235_REG_BUCK8CTRL		0x51
#define MAX77235_REG_BUCK8OUT		0x52
#define MAX77235_REG_BUCK9CTRL		0x54
#define MAX77235_REG_BUCK9OUT		0x55
#define MAX77235_REG_BUCK10CTRL 	0x57
#define MAX77235_REG_BUCK10OUT		0x58
#define MAX77235_REG_LDO1CTRL1		0x60
#define MAX77235_REG_LDO2CTRL1		0x61
#define MAX77235_REG_LDO3CTRL1		0x62
#define MAX77235_REG_LDO4CTRL1		0x63
#define MAX77235_REG_LDO5CTRL1		0x64
#define MAX77235_REG_LDO6CTRL1		0x65
#define MAX77235_REG_LDO7CTRL1		0x66
#define MAX77235_REG_LDO8CTRL1		0x67
#define MAX77235_REG_LDO9CTRL1		0x68
#define MAX77235_REG_LDO10CTRL1		0x69
#define MAX77235_REG_LDO11CTRL1		0x6A
#define MAX77235_REG_LDO12CTRL1		0x6B
#define MAX77235_REG_LDO13CTRL1		0x6C
#define MAX77235_REG_LDO14CTRL1		0x6D
#define MAX77235_REG_LDO15CTRL1		0x6E
#define MAX77235_REG_LDO17CTRL1		0x70
#define MAX77235_REG_LDO18CTRL1		0x71
#define MAX77235_REG_LDO19CTRL1		0x72
#define MAX77235_REG_LDO20CTRL1		0x73
#define MAX77235_REG_LDO21CTRL1		0x74
#define MAX77235_REG_LDO22CTRL1		0x75
#define MAX77235_REG_LDO23CTRL1		0x76
#define MAX77235_REG_LDO24CTRL1		0x77
#define MAX77235_REG_LDO25CTRL1		0x78
#define MAX77235_REG_LDO26CTRL1		0x79
#define MAX77235_REG_LDO27CTRL1 	0x7A
#define MAX77235_REG_LDO28CTRL1 	0x7B
#define MAX77235_REG_LDO29CTRL1 	0x7C
#define MAX77235_REG_LDO30CTRL1 	0x7D
#define MAX77235_REG_LDO32CTRL1 	0x7F
#define MAX77235_REG_LDO33CTRL1 	0x80
#define MAX77235_REG_LDO34CTRL1 	0x81
#define MAX77235_REG_LDO35CTRL1 	0x82
#define MAX77235_REG_LDO1CTRL2		0x90
#define MAX77235_REG_LDO2CTRL2		0x91
#define MAX77235_REG_LDO3CTRL2		0x92
#define MAX77235_REG_LDO4CTRL2		0x93
#define MAX77235_REG_LDO5CTRL2		0x94
#define MAX77235_REG_LDO6CTRL2		0x95
#define MAX77235_REG_LDO7CTRL2		0x96
#define MAX77235_REG_LDO8CTRL2		0x97
#define MAX77235_REG_LDO9CTRL2		0x98
#define MAX77235_REG_LDO10CTRL2		0x99
#define MAX77235_REG_LDO11CTRL2		0x9A
#define MAX77235_REG_LDO12CTRL2		0x9B
#define MAX77235_REG_LDO13CTRL2		0x9C
#define MAX77235_REG_LDO14CTRL2		0x9D
#define MAX77235_REG_LDO15CTRL2		0x9E
#define MAX77235_REG_LDO17CTRL2		0xA0
#define MAX77235_REG_LDO18CTRL2		0xA1
#define MAX77235_REG_LDO19CTRL2		0xA2
#define MAX77235_REG_LDO20CTRL2		0xA3
#define MAX77235_REG_LDO21CTRL2		0xA4
#define MAX77235_REG_LDO22CTRL2		0xA5
#define MAX77235_REG_LDO23CTRL2		0xA6
#define MAX77235_REG_LDO24CTRL2		0xA7
#define MAX77235_REG_LDO25CTRL2		0xA8
#define MAX77235_REG_LDO26CTRL2		0xA9
#define MAX77235_REG_LDO27CTRL2 	0xAA
#define MAX77235_REG_LDO28CTRL2 	0xAB
#define MAX77235_REG_LDO29CTRL2 	0xAC
#define MAX77235_REG_LDO30CTRL2 	0xAD
#define MAX77235_REG_LDO32CTRL2 	0xAF
#define MAX77235_REG_LDO33CTRL2 	0xB0
#define MAX77235_REG_LDO34CTRL2 	0xB1
#define MAX77235_REG_LDO35CTRL2 	0xB2

/* MAX77235_REG_BOOSTCTRL */
#define MAX77235_ALLOWABM_M			0x08
#define MAX77235_FORCEDBYP_M		0x04
#define MAX77235_BSTEN_M			0x02
#define MAX77235_BSTDIS_M			0x01

/* MAX77235_REG_BOOSTOUT */
#define MAX77235_BSTOUT_M			0x3F

/* MAX77235_REG_LDOxCTRL1 */
#define MAX77235_OPMODE_M			0xC0
#define MAX77235_Lx_TV_M			0x3F

/* MAX77235_REG_LDOxCTRL2 */
#define MAX77235_LDO_OVCLMP_EN_M	0x80
#define MAX77235_LDO_COMP_M			0x30
#define MAX77235_ADSLDO_M			0x02

/* MAX77235_REG_BUCKxCTRL for BUCK1, 5, 6, 7, 8, 9, 10 */
#define MAX77235_BUCK1_RAMP_M		0xF0	/* only valid for BUCK1, 6 */
#define MAX77235_SD1DIS_M			0x08
#define MAX77235_FPWM_M				0x04
#define MAX77235_BUCK1_EN_M			0x03

/* MAX77235_REG_BUCKxCTRL1 for BUCK2 to 4 */
#define MAX77235_BUCK2_RAMP_M		0xC0
#define MAX77235_BUCK2_EN_M			0x30
#define MAX77235_SD2DIS_M			0x08
/*#define MAX77235_FPWM_M			0x04*/
#define MAX77235_ROVS_ENBx_M		0x02
#define MAX77235_FSRADE_Bx_M		0x01

/* MAX77235_REG_BUCK2CTRL2 */
#define MAX77234_FORCED_PWM_M		0x04
#define MAX77234_B2_1PHASEEN_M		0x02
#define MAX77234_B2_3PHASEEN_M		0x01

/* MAX77235_REG_BUCK2PHTRAN */
#define MAX77234_B2PHTRN_M			0xFF

/* MAX77235_REG_BUCKxDVSx, MAX77235_REG_BUCKxOUT for BUCK1, 2, 3, 4, 6 */
#define MAX77235_BxDVS_M			0xFF

/* MAX77235_REG_BUCKxOUT for BUCK5, 7, 8, 9, 10 */
#define MAX77235_BxOUT_M			0x3F

/* MAX77235_REG_BUCK234FREQ */
#define MAX77235_BUCK234FREQ_M		0x07

#define MAX77256_PMOS_LDO_MIN_uV	800000
#define MAX77256_PMOS_LDO_MAX_uV	3950000
#define MAX77256_PMOS_LDO_STEP_uV	50000
#define MAX77256_NMOS_LDO_MIN_uV	800000
#define MAX77256_NMOS_LDO_MAX_uV	2375000
#define MAX77256_NMOS_LDO_STEP_uV	25000
#define MAX77256_BUCK1_MIN_uV		612500
#define MAX77256_BUCK1_MAX_uV		2206250
#define MAX77256_BUCK1_STEP_uV		6250
#define MAX77256_BUCK2_MIN_uV		600000
#define MAX77256_BUCK2_MAX_uV		1500000
#define MAX77256_BUCK2_STEP_uV		6250
#define MAX77256_BUCK5_MIN_uV		750000
#define MAX77256_BUCK5_MAX_uV		3900000
#define MAX77256_BUCK5_STEP_uV		50000

#define MAX77235_DVS_DELAY			100

/* MAX77235 regulator IDs */
enum max77235_regulators
{
	MAX77235_LDO1,
	MAX77235_LDO2,
	MAX77235_LDO3,
	MAX77235_LDO4,
	MAX77235_LDO5,
	MAX77235_LDO6,
	MAX77235_LDO7,
	MAX77235_LDO8,
	MAX77235_LDO9,
	MAX77235_LDO10,
	MAX77235_LDO11,
	MAX77235_LDO12,
	MAX77235_LDO13,
	MAX77235_LDO14,
	MAX77235_LDO15,
	MAX77235_LDO17,
	MAX77235_LDO18,
	MAX77235_LDO19,
	MAX77235_LDO20,
	MAX77235_LDO21,
	MAX77235_LDO22,
	MAX77235_LDO23,
	MAX77235_LDO24,
	MAX77235_LDO25,
	MAX77235_LDO26,
	MAX77235_LDO27,
	MAX77235_LDO28,
	MAX77235_LDO29,
	MAX77235_LDO30,
	MAX77235_LDO32,
	MAX77235_LDO33,
	MAX77235_LDO34,
	MAX77235_LDO35,
	MAX77235_BUCK1DVS1,
	MAX77235_BUCK1DVS2,
	MAX77235_BUCK1DVS3,
	MAX77235_BUCK1DVS4,
	MAX77235_BUCK1DVS5,
	MAX77235_BUCK1DVS6,
	MAX77235_BUCK1DVS7,
	MAX77235_BUCK1DVS8,
	MAX77235_BUCK2DVS1,
	MAX77235_BUCK2DVS2,
	MAX77235_BUCK2DVS3,
	MAX77235_BUCK2DVS4,
	MAX77235_BUCK2DVS5,
	MAX77235_BUCK2DVS6,
	MAX77235_BUCK2DVS7,
	MAX77235_BUCK2DVS8,
	MAX77235_BUCK3DVS1,
	MAX77235_BUCK3DVS2,
	MAX77235_BUCK3DVS3,
	MAX77235_BUCK3DVS4,
	MAX77235_BUCK3DVS5,
	MAX77235_BUCK3DVS6,
	MAX77235_BUCK3DVS7,
	MAX77235_BUCK3DVS8,
	MAX77235_BUCK4DVS1,
	MAX77235_BUCK4DVS2,
	MAX77235_BUCK4DVS3,
	MAX77235_BUCK4DVS4,
	MAX77235_BUCK4DVS5,
	MAX77235_BUCK4DVS6,
	MAX77235_BUCK4DVS7,
	MAX77235_BUCK4DVS8,
	MAX77235_BUCK5,
	MAX77235_BUCK6DVS1,
	MAX77235_BUCK6DVS2,
	MAX77235_BUCK6DVS3,
	MAX77235_BUCK6DVS4,
	MAX77235_BUCK6DVS5,
	MAX77235_BUCK6DVS6,
	MAX77235_BUCK6DVS7,
	MAX77235_BUCK6DVS8,
	MAX77235_BUCK7,
	MAX77235_BUCK8,
	MAX77235_BUCK9,
	MAX77235_BUCK10,
	MAX77235_BOOST,

	MAX77235_MAX,
};

enum max77235_opmode
{
	MAX77235_OPMODE_OFF,		/* Never use this value */
	MAX77235_OPMODE_ON_BY_PWRREQ,
	MAX77235_OPMODE_LP_BY_PWRREQ,
	MAX77235_OPMODE_ON,
};

enum max77235_ldo_comp
{
	MAX77235_COMP_50MOHM,
	MAX77235_COMP_150MOHM,
	MAX77235_COMP_500MOHM,
	MAX77235_COMP_100MOHM,
};

enum max77235_buck_frequency
{
	MAX77235_3_6MHZ,
	MAX77235_3_2MHZ,
	MAX77235_3_8MHZ,
	MAX77235_2_4MHZ,
	MAX77235_2_0MHZ,
	MAX77235_1_6MHZ,
	MAX77235_1_2MHZ,
	MAX77235_0_8MHZ,
};

struct max77235_regulator_data
{
	int id;
	enum max77235_opmode opmode;
	bool active_discharge;
	bool forced_pwm;
	bool overvoltage_clamp;			/* only valid in LDO */
	enum max77235_ldo_comp compensation;	/* only valid in LDO 7, 9, 17 to 29, 32 to 35 */
	bool remote_output_voltage_sense;	/* only valid in Buck 2, 3 and 4 */
	bool falling_slew_rate_active_discharge;/* only valid in Buck 2, 3 and 4 */
	bool automatic_bypass_mode;		/* only valid in Boost */
	bool forced_bypass;			/* only valid in Boost */
	struct regulator_init_data *initdata;
};

struct max77235_reg_platform_data
{
	struct max77235_regulator_data *regulator_data;
	struct device_node *of_node;
	int num_regulators;
	enum max77235_buck_frequency buck234_frequency;
	bool forced_pwm_3ph;			/* only valid in Buck 2 */
	bool forced_single_phase_operation;	/* only valid in Buck 2 */
	bool forced_three_phase_operation;	/* only valid in Buck 2 */
	unsigned int phase_transition;		/* only valid in Buck 2, in uV */
	int dvs[3];				/* GPIO number for DVS1, DVS2, DVS3.  */
	int selb[5];				/* GPIO number for SELB1, 2, 3, 4 and 6 */
};

extern int max77235_set_dvs(struct regulator *reg, int bucks, int dvs);

#endif
